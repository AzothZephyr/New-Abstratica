{"remainingRequest":"/Users/aaronh/Downloads/abstratica-web/node_modules/babel-loader/lib/index.js!/Users/aaronh/Downloads/abstratica-web/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/aaronh/Downloads/abstratica-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aaronh/Downloads/abstratica-web/src/components/ArtPreview.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/aaronh/Downloads/abstratica-web/src/components/ArtPreview.vue","mtime":1653334282000},{"path":"/Users/aaronh/Downloads/abstratica-web/babel.config.js","mtime":1653334282000},{"path":"/Users/aaronh/Downloads/abstratica-web/node_modules/cache-loader/dist/cjs.js","mtime":1693191335836},{"path":"/Users/aaronh/Downloads/abstratica-web/node_modules/babel-loader/lib/index.js","mtime":1693191336222},{"path":"/Users/aaronh/Downloads/abstratica-web/node_modules/cache-loader/dist/cjs.js","mtime":1693191335836},{"path":"/Users/aaronh/Downloads/abstratica-web/node_modules/vue-loader/lib/index.js","mtime":1693191336374}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2Fhcm9uaC9Eb3dubG9hZHMvYWJzdHJhdGljYS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2Fhcm9uaC9Eb3dubG9hZHMvYWJzdHJhdGljYS13ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5qc29uLnN0cmluZ2lmeS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS92dWV0aWZ5anMvdnVldGlmeS9pc3N1ZXMvNDk4MyNpc3N1ZWNvbW1lbnQtNDc3NDQyMDUwCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCB7IHNsZWVwIH0gZnJvbSAiLi4vbGliL3V0aWwiOwppbXBvcnQgcmV0cnkgZnJvbSAiYXN5bmMtcmV0cnkiOwppbXBvcnQgeyBtYXBNdXRhdGlvbnMgfSBmcm9tICJ2dWV4IjsKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICBzcmM6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIG5hbWU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIG1pbnQ6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICByZXF1aXJlOiB0cnVlCiAgICB9LAogICAgbWV0YWRhdGE6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICByZXF1aXJlOiB0cnVlCiAgICB9LAogICAgaXNOZXc6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHRoaXMub2JzZXJ2ZXIgPSBuZXcgSW50ZXJzZWN0aW9uT2JzZXJ2ZXIoZnVuY3Rpb24gKGVudHJpZXMpIHsKICAgICAgdmFyIGltYWdlID0gZW50cmllc1swXTsKCiAgICAgIGlmIChpbWFnZS5pc0ludGVyc2VjdGluZykgewogICAgICAgIF90aGlzLmludGVyc2VjdGVkID0gdHJ1ZTsKCiAgICAgICAgX3RoaXMub2JzZXJ2ZXIuZGlzY29ubmVjdCgpOwogICAgICB9CiAgICB9KTsKICAgIHRoaXMub2JzZXJ2ZXIub2JzZXJ2ZSh0aGlzLiRlbCk7CiAgfSwKICB3YXRjaDogewogICAgaW50ZXJzZWN0ZWQ6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9pbnRlcnNlY3RlZCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShuZXdWYWx1ZSkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGlmICghKCF0aGlzLmVyYyAmJiBuZXdWYWx1ZSAmJiAhdGhpcy5sb2FkaW5nRXJjKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gODsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgLy8gcHJldmVudCBtdWx0aXBsZSBjYWxscwogICAgICAgICAgICAgICAgdGhpcy5sb2FkaW5nRXJjID0gdHJ1ZTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMudHJ5R2V0RXJjRnJvbUNhY2hlKHRoaXMuc3JjKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgdGhpcy5lcmMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gc2xlZXAoMTAwMCk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIHRoaXMucmVhZHkgPSB0cnVlOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gaW50ZXJzZWN0ZWQoX3gpIHsKICAgICAgICByZXR1cm4gX2ludGVyc2VjdGVkLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBpbnRlcnNlY3RlZDsKICAgIH0oKQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxvYWRpbmdFcmM6IGZhbHNlLAogICAgICBsb2FkZWQ6IGZhbHNlLAogICAgICBvYnNlcnZlcjogbnVsbCwKICAgICAgaW50ZXJzZWN0ZWQ6IGZhbHNlLAogICAgICBlcmM6IG51bGwsCiAgICAgIHJlYWR5OiBmYWxzZQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBzcmNVcmw6IGZ1bmN0aW9uIHNyY1VybCgpIHsKICAgICAgdmFyIF90aGlzJGVyYzsKCiAgICAgIHJldHVybiB0aGlzLnJlYWR5ID8gKF90aGlzJGVyYyA9IHRoaXMuZXJjKSA9PT0gbnVsbCB8fCBfdGhpcyRlcmMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJGVyYy5pbWFnZSA6ICIiOwogICAgfQogIH0sCiAgbWV0aG9kczogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBNdXRhdGlvbnMoWyJyZW1vdmVOZXdNZXRhIl0pKSwge30sIHsKICAgIHRyeUdldEVyY0Zyb21DYWNoZTogZnVuY3Rpb24gdHJ5R2V0RXJjRnJvbUNhY2hlKHNyYykgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgICB2YXIgaWQsIGVyYywgX3lpZWxkJHJldHJ5LCBkYXRhOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaWQgPSBzcmMuc3Vic3RyaW5nKHNyYy5sYXN0SW5kZXhPZigiLyIpICsgMSk7CiAgICAgICAgICAgICAgICBlcmMgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShpZCk7CgogICAgICAgICAgICAgICAgaWYgKCFlcmMpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA0OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgSlNPTi5wYXJzZShlcmMpKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA2OwogICAgICAgICAgICAgICAgcmV0dXJuIHJldHJ5KCAvKiNfX1BVUkVfXyovX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldChzcmMpOwoKICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dDIuc2VudCk7CgogICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgICAgICAgICAgICB9KSksIHsKICAgICAgICAgICAgICAgICAgbWluVGltZW91dDogNTAwLAogICAgICAgICAgICAgICAgICBmYWN0b3I6IDEuNSwKICAgICAgICAgICAgICAgICAgb25SZXRyeTogZnVuY3Rpb24gb25SZXRyeSgpIHsvLyBsb2dnZXIubG9nRXJyb3IoZSwgYGApOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgX3lpZWxkJHJldHJ5ID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgICBkYXRhID0gX3lpZWxkJHJldHJ5LmRhdGE7CiAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShpZCwgSlNPTi5zdHJpbmdpZnkoZGF0YSkpOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIGRhdGEpOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgb25EZXRhaWxDbGlja2VkOiBmdW5jdGlvbiBvbkRldGFpbENsaWNrZWQoKSB7CiAgICAgIGlmICghdGhpcy5sb2FkZWQpIHJldHVybjsKCiAgICAgIGlmICh0aGlzLmlzTmV3KSB7CiAgICAgICAgdGhpcy5yZW1vdmVOZXdNZXRhKHRoaXMubWV0YWRhdGEpOwogICAgICB9CgogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgbmFtZTogIk5GVERldGFpbCIsCiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICBtZXRhZGF0YTogdGhpcy5tZXRhZGF0YQogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgb25Mb2FkZWQ6IGZ1bmN0aW9uIG9uTG9hZGVkKCkgewogICAgICB0aGlzLmxvYWRlZCA9IHRydWU7CiAgICB9LAogICAgb25FcnJvcjogZnVuY3Rpb24gb25FcnJvcigpIHsKICAgICAgLy8gcmVsb2FkCiAgICAgIHRoaXMucmVhZHkgPSBmYWxzZTsKICAgICAgdGhpcy5yZWFkeSA9IHRydWU7CiAgICB9LAogICAgY2FsY3VsYXRlSW1nSGVpZ2h0OiBmdW5jdGlvbiBjYWxjdWxhdGVJbWdIZWlnaHQoKSB7CiAgICAgIGlmICh0aGlzLiR2dWV0aWZ5LmJyZWFrcG9pbnQud2lkdGggPCA0MDApIHJldHVybiAiMzUwcHgiOwoKICAgICAgc3dpdGNoICh0aGlzLiR2dWV0aWZ5LmJyZWFrcG9pbnQubmFtZSkgewogICAgICAgIGNhc2UgInhzIjoKICAgICAgICAgIHJldHVybiAiNDUwcHgiOwoKICAgICAgICBjYXNlICJzbSI6CiAgICAgICAgICByZXR1cm4gIjQ1MHB4IjsKCiAgICAgICAgY2FzZSAibWQiOgogICAgICAgICAgcmV0dXJuICIzMDBweCI7CgogICAgICAgIGNhc2UgImxnIjoKICAgICAgICAgIHJldHVybiAiMzAwcHgiOwoKICAgICAgICBjYXNlICJ4bCI6CiAgICAgICAgICByZXR1cm4gIjMwMHB4IjsKICAgICAgfQoKICAgICAgcmV0dXJuICI1MDBweCI7CiAgICB9CiAgfSksCiAgZGVzdHJveWVkOiBmdW5jdGlvbiBkZXN0cm95ZWQoKSB7CiAgICB0aGlzLm9ic2VydmVyLmRpc2Nvbm5lY3QoKTsKICB9Cn07"},{"version":3,"sources":["ArtPreview.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-card elevation=\"4\" outlined class=\"ma-0 ma-md-1 ma-lg-1 ma-xl-1\">\n    <v-img\n      :src=\"srcUrl\"\n      aspect-ratio=\"1\"\n      @load=\"onLoaded\"\n      @error=\"onError\"\n      @click=\"onDetailClicked\"\n      class=\"white--text align-end cursor\"\n      :gradient=\"loaded ? 'to bottom, rgba(0,0,0,0) 80%, rgba(0,0,0,.6)' : ''\"\n    >\n      <template v-slot:placeholder>\n        <v-row\n          class=\"fill-height ma-0 grey lighten-4\"\n          align=\"center\"\n          justify=\"center\"\n        >\n          <v-progress-circular\n            indeterminate\n            color=\"grey lighten-1\"\n          ></v-progress-circular>\n        </v-row>\n      </template>\n      <v-card-title v-show=\"loaded\" class=\"pb-5 pb-sm-3 pb-md-3\">\n        {{ name }}\n        <v-chip\n          v-show=\"isNew\"\n          label\n          color=\"yellow\"\n          class=\"ma-1 ml-2\"\n          x-small\n          :ripple=\"false\"\n          >New</v-chip\n        >\n      </v-card-title>\n    </v-img>\n  </v-card>\n</template>\n\n<script>\n// https://github.com/vuetifyjs/vuetify/issues/4983#issuecomment-477442050\nimport axios from \"axios\";\nimport { sleep } from \"../lib/util\";\nimport retry from \"async-retry\";\nimport { mapMutations } from \"vuex\";\n\nexport default {\n  props: {\n    src: {\n      type: String,\n      required: true,\n    },\n    name: {\n      type: String,\n      required: true,\n    },\n    mint: {\n      type: String,\n      require: true,\n    },\n    metadata: {\n      type: String,\n      require: true,\n    },\n    isNew: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  mounted() {\n    this.observer = new IntersectionObserver((entries) => {\n      const image = entries[0];\n      if (image.isIntersecting) {\n        this.intersected = true;\n        this.observer.disconnect();\n      }\n    });\n\n    this.observer.observe(this.$el);\n  },\n  watch: {\n    intersected: async function (newValue) {\n      if (!this.erc && newValue && !this.loadingErc) {\n        // prevent multiple calls\n        this.loadingErc = true;\n        this.erc = await this.tryGetErcFromCache(this.src);\n        // slow down a bit to avoid 500\n        await sleep(1000);\n        this.ready = true;\n      }\n    },\n  },\n  data() {\n    return {\n      loadingErc: false,\n      loaded: false,\n      observer: null,\n      intersected: false,\n      erc: null,\n      ready: false,\n    };\n  },\n  computed: {\n    srcUrl() {\n      return this.ready ? this.erc?.image : \"\";\n    },\n  },\n  methods: {\n    ...mapMutations([\"removeNewMeta\"]),\n    async tryGetErcFromCache(src) {\n      const id = src.substring(src.lastIndexOf(\"/\") + 1);\n      const erc = localStorage.getItem(id);\n      if (erc) {\n        // console.log(\"found from cache\");\n        return JSON.parse(erc);\n      }\n      const { data } = await retry(\n        async () => {\n          return await axios.get(src);\n        },\n        {\n          minTimeout: 500,\n          factor: 1.5,\n          onRetry: () => {\n            // logger.logError(e, ``);\n          },\n        }\n      );\n      localStorage.setItem(id, JSON.stringify(data));\n      return data;\n    },\n    onDetailClicked() {\n      if (!this.loaded) return;\n      if (this.isNew) {\n        this.removeNewMeta(this.metadata);\n      }\n      this.$router.push({\n        name: \"NFTDetail\",\n        params: { metadata: this.metadata },\n      });\n    },\n    onLoaded() {\n      this.loaded = true;\n    },\n    onError() {\n      // reload\n      this.ready = false;\n      this.ready = true;\n    },\n    calculateImgHeight() {\n      if (this.$vuetify.breakpoint.width < 400) return \"350px\";\n      switch (this.$vuetify.breakpoint.name) {\n        case \"xs\":\n          return \"450px\";\n        case \"sm\":\n          return \"450px\";\n        case \"md\":\n          return \"300px\";\n        case \"lg\":\n          return \"300px\";\n        case \"xl\":\n          return \"300px\";\n      }\n      return \"500px\";\n    },\n  },\n  destroyed() {\n    this.observer.disconnect();\n  },\n};\n</script>\n<style scoped lang=\"scss\">\n@import \"../scss/global.scss\";\n\n.cursor {\n  cursor: pointer;\n}\n</style>\n"],"sourceRoot":"src/components"}]}