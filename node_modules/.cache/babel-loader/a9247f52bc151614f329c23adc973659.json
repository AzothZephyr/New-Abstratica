{"remainingRequest":"/Users/aaronh/Downloads/abstratica-web/node_modules/babel-loader/lib/index.js!/Users/aaronh/Downloads/abstratica-web/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/aaronh/Downloads/abstratica-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aaronh/Downloads/abstratica-web/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/aaronh/Downloads/abstratica-web/src/App.vue","mtime":1653334282000},{"path":"/Users/aaronh/Downloads/abstratica-web/babel.config.js","mtime":1653334282000},{"path":"/Users/aaronh/Downloads/abstratica-web/node_modules/cache-loader/dist/cjs.js","mtime":1693191335836},{"path":"/Users/aaronh/Downloads/abstratica-web/node_modules/babel-loader/lib/index.js","mtime":1693191336222},{"path":"/Users/aaronh/Downloads/abstratica-web/node_modules/cache-loader/dist/cjs.js","mtime":1693191335836},{"path":"/Users/aaronh/Downloads/abstratica-web/node_modules/vue-loader/lib/index.js","mtime":1693191336374}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-app>\n    <v-app-bar app color=\"grey darken-4\" dark flat>\n      <v-app-bar-nav-icon\n        @click.stop=\"drawer = !drawer\"\n        class=\"d-xs-block d-sm-block d-md-none d-lg-none d-xl-none\"\n      ></v-app-bar-nav-icon>\n      <v-container fluid>\n        <v-row>\n          <v-col cols=\"5\" sm=\"4\" md=\"2\" lg=\"2\" xl=\"2\">\n            <div class=\"align-center d-flex fill-height\">\n              <v-img\n                :alt=\"name\"\n                class=\"shrink ma-0 pa-0 d-none d-md-block d-lg-block d-xl-block\"\n                contain\n                src=\"/logo_gradient.png\"\n                width=\"40\"\n              />\n              <router-link\n                :to=\"{ path: '/home' }\"\n                class=\"no-text-decor inherit-color\"\n              >\n                <h4 class=\"app-name ml-sm-0 ml-xs-0 ml-md-2 ml-lg-2 ml-xl-2\">\n                  {{ name }}\n                </h4>\n              </router-link>\n            </div>\n          </v-col>\n\n          <v-col xl=\"8\" lg=\"8\" md=\"8\" sm=\"2\" class=\"pa-0 align-center\">\n            <div\n              class=\"\n                text-center\n                d-none d-md-block d-lg-block d-xl-block\n                fill-height\n              \"\n            >\n              <v-tabs\n                :value=\"currentTab\"\n                @change=\"onTabChange\"\n                grow\n                centered\n                center-active\n                height=\"64\"\n                class=\"d-block fill-height nav-tabs mx-auto\"\n              >\n                <template v-for=\"(item, i) in nav\">\n                  <v-tab\n                    :disabled=\"item.disabled\"\n                    :key=\"i\"\n                    :to=\"!item.target ? item.path : ''\"\n                    :href=\"item.target ? item.href : ''\"\n                    :target=\"item.target || ''\"\n                  >\n                    <template v-if=\"item.name == 'my collection'\">\n                      <v-badge\n                        dark\n                        :value=\"walletConnected && newMintBadge > 0\"\n                        inline\n                        :content=\"newMintBadge\"\n                        color=\"secondary\"\n                      >\n                        <!-- badge wrap cause inactive icon color to stay active -->\n                        <v-icon\n                          left\n                          :class=\"[\n                            'text-capitalize d-md-none d-lg-inline-block d-xl-inline-block mb-1',\n                            currentView !== 'mycollection'\n                              ? 'icon-inactive-fix'\n                              : '',\n                          ]\"\n                          >{{ item.icon }}</v-icon\n                        >\n                        {{ item.name }}\n                      </v-badge>\n                      <!-- newMintBadge > 0 && currentView !== 'mycollection' -->\n                    </template>\n                    <template v-else>\n                      <v-icon\n                        left\n                        class=\"\n                          text-capitalize\n                          d-md-none d-lg-inline-block d-xl-inline-block\n                          mb-1\n                        \"\n                        >{{ item.icon }}</v-icon\n                      >\n                      {{ item.name }}\n                    </template>\n                  </v-tab>\n                </template>\n              </v-tabs>\n            </div>\n          </v-col>\n\n          <v-col cols=\"7\" sm=\"6\" md=\"2\" lg=\"2\" xl=\"2\">\n            <WalletButton\n              :lamports=\"lamports\"\n              :address=\"connectedWalletKey\"\n              :network=\"network\"\n              @connect=\"openWalletDialog\"\n              @disconnect=\"disconnectWallet\"\n            />\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-app-bar>\n    <MintedStatus\n      :minted=\"minted\"\n      :max=\"maxMint\"\n      v-show=\"1 == 0 && !$vuetify.breakpoint.mobile\"\n    />\n    <v-btn\n      class=\"mint-btn bn5\"\n      fab\n      x-large\n      dark\n      fixed\n      bottom\n      right\n      text\n      :ripple=\"false\"\n      @click=\"onMintClicked\"\n    >\n      <v-icon class=\"z-1000 bn5-icon\">mdi-wallet-plus</v-icon>\n    </v-btn>\n\n    <SideDrawer v-model=\"drawer\" :name=\"name\" :nav=\"nav\" />\n    <v-main>\n      <keep-alive>\n        <router-view :app-name=\"name\"></router-view>\n      </keep-alive>\n    </v-main>\n    <MintDialog\n      v-model=\"mintDialog\"\n      v-show=\"walletConnected\"\n      :minted=\"minted\"\n      :max=\"maxMint\"\n      :price=\"mintPriceLamports\"\n      :balance=\"walletLamports\"\n      :loading=\"submitingMint\"\n      :allowMint=\"allowMint\"\n      @mint=\"onMintRequest\"\n    />\n    <WalletDialog v-model=\"walletDialog\" @connect=\"onConnect\" />\n    <v-snackbar v-model=\"snackbar\" top right :timeout=\"3000\">\n      {{ snackbarMessage }}\n    </v-snackbar>\n  </v-app>\n</template>\n<script>\n/* eslint-disable no-unused-vars */\nimport WalletDialog from \"./components/WalletDialog.vue\";\nimport WalletButton from \"./components/WalletButton.vue\";\nimport SideDrawer from \"./components/SideDrawer.vue\";\nimport walletFac from \"./lib/wallet/wallet-factory\";\nimport MintedStatus from \"./components/MintedStatus.vue\";\nimport MintDialog from \"./components/MintDialog.vue\";\nimport { network, networkConnection, creator } from \"./lib/connection\";\nimport { mapActions, mapGetters } from \"vuex\";\nimport { sleep, toDisplayAmount } from \"./lib/util\";\nimport { MAX_MINT, MINT_PRICE, ENABLE_MINT } from \"./lib/settings\";\nimport { createMintRequestTranscation } from \"./lib/transaction\";\n\nvar Wallet = null;\n\nexport default {\n  name: \"App\",\n  components: {\n    WalletDialog,\n    WalletButton,\n    SideDrawer,\n    MintedStatus,\n    MintDialog,\n  },\n  computed: {\n    ...mapGetters([\"minted\", \"connectedWallet\", \"isConnected\", \"newMintBadge\"]),\n\n    lamports() {\n      return this.accountInfo?.lamports || 0;\n    },\n    walletSol() {\n      return toDisplayAmount(this.accountInfo?.lamports || 0);\n    },\n    walletLamports() {\n      return this.accountInfo?.lamports || 0;\n    },\n    walletConnected() {\n      return this.isConnected;\n    },\n    currentView() {\n      return (this.$route.name || \"\").toLowerCase();\n    },\n    network() {\n      return network;\n    },\n    maxMint() {\n      return MAX_MINT;\n    },\n    mintPriceLamports() {\n      return MINT_PRICE;\n    },\n    allowMint() {\n      return ENABLE_MINT;\n    },\n    mintPriceSol() {\n      return toDisplayAmount(this.mintPriceLamports);\n    },\n    connectedWalletKey() {\n      return this.connectedWallet;\n    },\n  },\n  async created() {\n    await this.loadAbs();\n    // await this.startPollingNewMint();\n  },\n  // clean up\n  beforeDestroy() {\n    if (this.newMintPoolingHandle) clearInterval(this.newMintPoolingHandle);\n  },\n  data: () => ({\n    name: \"Abstratica\",\n    // wallet\n    accountChangeHandle: 0,\n    accountInfo: null,\n\n    mintDialog: false,\n    submitingMint: false,\n\n    // component stuff\n    snackbar: false,\n    snackbarMessage: \"\",\n    // snackbarType: \"primary\", // default color looks too ugly\n    drawer: false,\n    walletDialog: false,\n\n    nav: [\n      {\n        name: \"home\",\n        disabled: false,\n        path: \"/home\",\n        icon: \"mdi-home\",\n      },\n      {\n        name: \"my collection\",\n        disabled: false,\n        path: \"/collection\",\n        icon: \"mdi-image-multiple\",\n      },\n      {\n        name: \"explore\",\n        disabled: false,\n        path: \"/explore\",\n        icon: \"mdi-compass\",\n      },\n      {\n        name: \"codex\",\n        disabled: false,\n        path: \"/codex\",\n        icon: \"mdi-book-open-page-variant\",\n      },\n      {\n        name: \"marketplace\",\n        disabled: false,\n        target: \"_blank\",\n        href: \"https://digitaleyes.market/collections/Abstratica\",\n        icon: \"mdi-shopping\",\n      },\n    ],\n    newMintPollInterval: 5000,\n    newMintPoolingHandle: 0,\n    isPooling: false,\n    previousTab: \"/home\",\n    currentTab: \"/home\",\n    allowTabs: [\"/home\", \"/explore\", \"/codex\", \"/collection\"],\n  }),\n  methods: {\n    ...mapActions([\"loadAbs\", \"connect\", \"disconnect\", \"refreshTokens\"]),\n    async startPollingNewMint() {\n      this.newMintPoolingHandle = setInterval(async () => {\n        if (!this.walletConnected || this.isPooling) return;\n        await this.updateWalletSpl();\n      }, this.newMintPollInterval);\n    },\n    async updateWalletSpl() {\n      this.isPooling = true;\n      try {\n        await this.refreshTokens();\n      } catch (e) {\n        await sleep(2000);\n        console.log(\"update wallet info error\");\n      } finally {\n        this.isPooling = false;\n      }\n    },\n    updateSolBalance(info) {\n      this.accountInfo.lamports = info.lamports;\n    },\n    async onConnect(walletName) {\n      Wallet = await walletFac(walletName, network);\n\n      Wallet.on(\"connect\", async () => await this.onWalletConnectCb());\n      Wallet.on(\"disconnect\", this.onWalletDisconnectCb);\n      Wallet.on(\"error\", (e) => {\n        if (e.name == \"WalletNotFoundError\") {\n          this.showSnackBar(`Could not connect to ${walletName}`);\n        }\n        console.log(\"wallet connect canceled\");\n      });\n\n      Wallet.connect();\n    },\n    async onWalletConnectCb() {\n      try {\n        this.connect(Wallet.publicKey);\n        this.accountChangeHandle = networkConnection.onAccountChange(\n          Wallet.publicKey,\n          this.updateSolBalance\n        );\n\n        // no need to wait for this\n        this.accountInfo = await networkConnection.getAccountInfo(\n          this.connectedWalletKey\n        );\n        this.showSnackBar(\"Wallet connected.\", \"success\");\n        this.walletDialog = false;\n      } catch {\n        console.log(\"wallet connect canceled\");\n      }\n    },\n    onWalletDisconnectCb() {\n      networkConnection.removeAccountChangeListener(this.accountChangeHandle);\n      this.disconnect();\n      this.showSnackBar(\"Wallet disconnected.\", \"success\");\n      this.mintDialog = false;\n    },\n    openWalletDialog() {\n      this.walletDialog = true;\n    },\n    disconnectWallet() {\n      Wallet.disconnect();\n      this.disconnect();\n    },\n\n    showSnackBar(message, type = \"primary\") {\n      this.snackbar = true;\n      this.snackbarMessage = message;\n      // this.snackbarType = type;\n    },\n    onResize() {\n      this.drawer = false;\n    },\n    onMintClicked() {\n      if (!this.walletConnected) {\n        this.walletDialog = true;\n        return;\n      }\n      this.mintDialog = true;\n    },\n    async onTabChange(clickedTab) {\n      // console.log(clickedTab);\n      const isAllow =\n        this.allowTabs.findIndex(\n          (t) => t.toLowerCase() === clickedTab.toLowerCase()\n        ) !== -1;\n      this.currentTab = clickedTab;\n      await this.$nextTick();\n      if (!isAllow) this.currentTab = this.previousTab;\n      else this.previousTab = this.currentTab;\n    },\n\n    async onMintRequest() {\n      if (!this.allowMint) return;\n      // craft tran\n      this.submitingMint = true;\n      try {\n        const trans = await createMintRequestTranscation(\n          networkConnection,\n          this.connectedWalletKey,\n          creator,\n          this.mintPriceLamports\n        );\n\n        const signed = await Wallet.signTransaction(trans);\n        // console.log(trans);\n        const confirmed = await networkConnection.sendRawTransaction(\n          signed.serialize(),\n          {\n            skipPreflight: true,\n            preflightCommitment: \"confirmed\",\n          }\n        );\n\n        this.showSnackBar(\n          `Transaction sent: ${confirmed.substring(0, 16)}...`,\n          \"success\"\n        );\n      } finally {\n        this.submitingMint = false;\n      }\n    },\n  },\n};\n</script>\n<style scoped lang=\"scss\">\n@import \"./scss/global.scss\";\n@import \"./scss/variables.scss\";\n@import \"./scss/effects.scss\";\n\n.nav-tabs {\n  max-width: 800px;\n}\n.nav-tabs {\n  ::v-deep .v-tabs-bar {\n    background-color: $abs-dark-bg !important;\n  }\n}\n\n.icon-inactive-fix {\n  color: rgba(255, 255, 255, 0.6);\n}\n\n.mint-btn {\n  background: transparent !important;\n  box-shadow: 0 !important;\n}\n</style>\n"],"sourceRoot":"src"}]}